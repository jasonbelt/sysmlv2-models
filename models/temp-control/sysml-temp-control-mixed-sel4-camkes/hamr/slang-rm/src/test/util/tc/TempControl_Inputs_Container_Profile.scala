package tc

import org.sireum._
import tc._
import org.sireum.Random.Impl.Xoshiro256

// Do not edit this file as it will be overwritten if SystemTestArtifactGen is rerun

object TempControl_Inputs_Container_Profile {

  def freshRandomLib: RandomLib = {
    return RandomLib(Random.Gen64Impl(Xoshiro256.create))
  }

  def getDefaultProfile: TempControl_Inputs_Container_Profile = {
    return TempControl_Inputs_Container_Profile (
      name = "Default TempControl_Inputs_Container_Profile Profile",
      numTestVectorGenRetries = 100,

      currentTemp = freshRandomLib,
      tempChanged = freshRandomLib,
      fanError = freshRandomLib
    )
  }
}

case class TempControl_Inputs_Container_Profile (
  var name: String,
  var numTestVectorGenRetries: Z,

  var currentTemp : RandomLib,
  var tempChanged : RandomLib,
  var fanError : RandomLib) extends org.sireum.$internal.MutableMarker {

  def next(): TempControl_Inputs_Container = {
    return TempControl_Inputs_Container (
      currentTemp.nextTempControlMixedSeL4CAmKESTemperature(),
      tempChanged.nextOption_artEmpty(),
      fanError.nextB()
    )
  }

  override def $clonable: Boolean = F

  override def $clonable_=(b: Boolean): org.sireum.$internal.MutableMarker = this

  override def $owned: Boolean = F

  override def $owned_=(b: Boolean): org.sireum.$internal.MutableMarker = this

  override def $clone: org.sireum.$internal.MutableMarker = this
}
